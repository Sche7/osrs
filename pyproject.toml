[tool.poetry]
name = "osrs"
version = "0.1.0"
description = ""
authors = ["Steven <stevencheung7@outlook.dk>"]
readme = "README.md"
packages = [{ include = "runescape", from = "src" }]

[tool.poetry.scripts]
discord_webhook = "src.webhooks.discord:main"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.2"
beautifulsoup4 = "^4.13.3"
discord = "^2.3.2"
python-dotenv = "^1.1.0"
boto3 = "^1.35.68"
awscli = "^1.36.40"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
ruff = "^0.11.9"
pre-commit = "^4.2.0"
types-boto3 = "^1.38.18"
coverage = "^7.6.10"
pytest-coverage = "^0.0"


[tool.poetry.group.extra.dependencies]
ipython = "^8.35.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "."
addopts =  "-m 'not aws'"
markers = [
    "aws: Mark tests that connect to AWS. Select with '-m aws'"
]

[tool.ruff]
exclude = [
    "/tests",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",    
]

line-length = 90

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
